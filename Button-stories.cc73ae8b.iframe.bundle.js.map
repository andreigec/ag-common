{"version":3,"file":"Button-stories.cc73ae8b.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;;AAEA;;AAEA;;;;;AAKA;;AAEA;;AAEA;;;AAKA;AACA;AAGA;AACA;AAcA","sources":["webpack://ag-common/./src/ui/components/Button/index.tsx"],"sourcesContent":["'use client';\n\nimport { css } from '@emotion/react';\nimport type { StyledComponent } from '@emotion/styled';\nimport styled from '@emotion/styled';\nimport type { JSX, KeyboardEventHandler, MouseEventHandler } from 'react';\nimport React from 'react';\n\nimport { colours } from '../../styles/colours';\n\nexport const ButtonBase = css`\n  text-decoration: none;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 0;\n  font-weight: bold;\n  font-family: inherit;\n  font-size: 1.2rem;\n  border-radius: 0.5rem;\n  cursor: pointer;\n  height: 3rem;\n  line-height: 1rem;\n  &:hover {\n    filter: saturate(1.5);\n  }\n  padding-left: 1rem;\n  padding-right: 1rem;\n  color: white;\n\n  &[data-disabled='true'] {\n    cursor: default !important;\n    background-color: #888 !important;\n  }\n\n  &[data-theme='green'] {\n    background-color: ${colours.darkGreen};\n    &[data-invert='true'] {\n      color: ${colours.darkGreen};\n      background-color: white;\n      border: solid 1px ${colours.darkGreen};\n    }\n  }\n\n  &[data-theme='red'] {\n    background-color: ${colours.orangeRed};\n    &[data-invert='true'] {\n      color: ${colours.orangeRed};\n      background-color: white;\n      border: solid 1px ${colours.orangeRed};\n    }\n  }\n`;\n\nconst BaseButton = styled.button`\n  ${ButtonBase}\n`;\n\nconst BaseA = styled.a`\n  ${ButtonBase}\n`;\n\nexport interface IButton {\n  title?: string;\n  invert?: boolean;\n  disabled?: boolean;\n  className?: string;\n  onClick?: MouseEventHandler<HTMLButtonElement>;\n  onKeyDown?: KeyboardEventHandler<HTMLButtonElement>;\n  children: string | JSX.Element;\n  href?: string;\n  colourTheme?: 'green' | 'red';\n}\nexport const Button = (props: IButton) => {\n  const Component: StyledComponent<'button', any> = props.href\n    ? (BaseA as any)\n    : BaseButton;\n\n  return (\n    <Component\n      className={props.className}\n      data-invert={props.invert}\n      data-disabled={props.disabled ?? false}\n      role=\"button\"\n      title={props.title || undefined}\n      data-theme={props.colourTheme ?? 'green'}\n      {...props}\n    >\n      {props.children}\n    </Component>\n  );\n};\n"],"names":[],"sourceRoot":""}