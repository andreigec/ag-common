{"version":3,"file":"BorderGradient-stories.483e7802.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;AA2BA;AACA;AAGA;AACA;AAGA;;;;;;;AASA;;AAEA;;AAwBA","sources":["webpack://ag-common/./src/ui/components/BorderGradient/index.tsx"],"sourcesContent":["'use client';\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport type { CSSProperties } from 'react';\nimport React from 'react';\n\nimport { removeUndefValuesFromObject } from '../../../common/helpers/object';\nimport { colours } from '../../styles/colours';\n\nconst BGcss = css`\n  max-height: calc(100% - 6px);\n  display: flex;\n  border: 0;\n  padding: 3px;\n  background-image:\n    linear-gradient(white, white),\n    linear-gradient(to bottom right, var(--left), var(--right));\n  background-origin: border-box;\n  background-clip: content-box, border-box;\n  overflow: hidden;\n  &[data-ccnd='true'] {\n    &:hover {\n      filter: saturate(3);\n    }\n  }\n`;\n\nconst BGLink = styled.div`\n  ${BGcss};\n`;\n\nconst BGALink = styled.a`\n  ${BGcss};\n`;\n\nconst Padding = styled.div`\n  justify-content: center;\n  align-items: center;\n  display: flex;\n  flex-flow: column;\n  border: 0;\n  flex-grow: 1;\n`;\n\nconst FeatureBoxFill = styled(Padding)`\n  background-image: linear-gradient(to bottom right, var(--left), var(--right));\n  color: ${colours.mainLight};\n  flex-grow: 1;\n`;\ntype IOnClick =\n  | React.MouseEvent<HTMLDivElement, MouseEvent>\n  | React.MouseEvent<HTMLAnchorElement, MouseEvent>;\n\nexport interface IBorderGradient {\n  canClick?: boolean;\n  noGrow?: boolean;\n  className?: string;\n  fill?: boolean;\n  /** default 2rem */\n  radius?: string;\n  left?: string;\n  right?: string;\n  children: React.ReactNode;\n  padding?: string;\n  onClick?: (e: IOnClick) => void;\n  href?: string;\n  target?: string;\n  rel?: string;\n  disabled?: boolean;\n}\nexport const BorderGradient = ({\n  left = colours.orange,\n  right = colours.orangeRed,\n  children,\n  radius = '2rem',\n  fill = false,\n  padding = '2rem',\n  className,\n  onClick,\n  href,\n  target,\n  rel,\n  noGrow = false,\n  disabled = false,\n  canClick = false,\n}: IBorderGradient) => {\n  const CCND = canClick && !disabled;\n  const style: CSSProperties = removeUndefValuesFromObject({\n    flexGrow: noGrow ? 0 : 1,\n    '--left': left,\n    '--right': right,\n    borderRadius: radius,\n    filter: !disabled ? null : 'grayscale(1)',\n    cursor: CCND ? 'pointer' : 'default',\n  });\n\n  const props = {\n    onClick: (e: IOnClick) => !disabled && onClick && onClick(e),\n    className,\n    href,\n    target,\n    rel,\n    canClick: !!onClick || canClick,\n    style,\n    'data-ccnd': CCND,\n  };\n\n  const child = (\n    <>\n      {!fill && <Padding style={{ padding }}>{children}</Padding>}\n      {fill && <FeatureBoxFill style={{ padding }}>{children}</FeatureBoxFill>}\n    </>\n  );\n\n  if (href) {\n    return <BGALink {...props}>{child}</BGALink>;\n  }\n  return <BGLink {...props}>{child}</BGLink>;\n};\n"],"names":[],"sourceRoot":""}