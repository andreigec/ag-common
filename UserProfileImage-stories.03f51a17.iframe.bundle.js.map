{"version":3,"file":"UserProfileImage-stories.03f51a17.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA;;;;AAcA","sources":["webpack://ag-common/./src/ui/components/UserImage/index.tsx"],"sourcesContent":["'use client';\nimport styled from '@emotion/styled';\nimport React, { useEffect, useState } from 'react';\n\nimport { notEmpty } from '../../../common/helpers/array';\nimport { UserOutline } from '../../icons/UserOutline';\n\nconst Base = styled.div`\n  border-radius: 50%;\n  border: solid 1px white;\n  overflow: hidden;\n  position: relative;\n\n  @keyframes color {\n    0% {\n      fill: #bbb;\n    }\n    50% {\n      fill: #aaa;\n    }\n    100% {\n      fill: #bbb;\n    }\n  }\n  svg {\n    transition: all 1s;\n  }\n  &[data-fail='0'] {\n    svg {\n      fill: white;\n    }\n  }\n  &[data-fail='0.5'] {\n    svg {\n      animation-name: color;\n      animation-duration: 2s;\n      animation-iteration-count: infinite;\n    }\n  }\n  &[data-fail='1'] {\n    svg {\n      fill: #333;\n    }\n  }\n`;\n\nconst Img = styled.img`\n  position: absolute;\n  top: 0;\n  left: 0;\n`;\n\nexport interface IUserImage {\n  image?: string;\n  className?: string;\n  /** default \"user image\" */\n  title?: string;\n  opt?: { width?: string; height?: string };\n}\n\nexport const UserImage = ({\n  image,\n  className,\n  title = 'user image',\n  opt,\n}: IUserImage) => {\n  const [failed, setFailed] = useState<0 | 0.5 | 1>(0);\n  useEffect(() => {\n    setFailed(0.5);\n  }, []);\n\n  return (\n    <Base\n      className={className}\n      title={title}\n      data-fail={failed}\n      style={{\n        width: opt?.width || '100%',\n        height: opt?.height || '100%',\n        maxWidth: '100%',\n        maxHeight: '100%',\n      }}\n    >\n      {UserOutline}\n      {failed !== 1 && (\n        <Img\n          alt=\"user\"\n          src={image}\n          onError={() => setFailed(1)}\n          onAbort={() => setFailed(1)}\n          style={{ width: '100%', height: '100%', objectFit: 'cover' }}\n        />\n      )}\n    </Base>\n  );\n};\n\nexport interface IUserProfileImage {\n  className?: string;\n  user?: { picture: string; fullname: string; userId: string };\n  /** 100% if not provided. default 2.5rem */\n  opt?: { width?: string; height?: string };\n}\nexport const UserProfileImage = ({\n  className,\n  user,\n  opt = { width: '2.5rem', height: '2.5rem' },\n}: IUserProfileImage) => {\n  const image = user?.picture;\n\n  const titleA = [user?.fullname, user?.userId].filter(notEmpty);\n  const title = titleA.length === 0 ? '' : titleA.join(' - ');\n\n  return (\n    <UserImage image={image} title={title} className={className} opt={opt} />\n  );\n};\n"],"names":[],"sourceRoot":""}