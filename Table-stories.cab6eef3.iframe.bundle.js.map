{"version":3,"file":"Table-stories.cab6eef3.iframe.bundle.js","mappings":";;;;;;AAeA;;;;;;;;;AAWA;;;;AAMA;;AAIA;;;;AAgBA","sources":["webpack://ag-common/./src/ui/components/Table/index.tsx"],"sourcesContent":["'use client';\nimport styled from '@emotion/styled';\nimport type { JSX } from 'react';\nimport React from 'react';\n\nimport { groupByList } from '../../../common/helpers/groupBy';\n\nconst Base = styled.div`\n  display: flex;\n  flex-flow: column;\n  width: 100%;\n  max-height: 100%;\n  overflow-y: auto;\n`;\n\nconst TableRow = styled.div`\n  display: flex;\n  border: solid 1px #ccc;\n  &[data-header='true'] {\n    border-bottom: solid 1px #888;\n  }\n  &:not(:first-of-type) {\n    border-top: 0;\n  }\n`;\n\nconst Group = styled.div`\n  display: flex;\n  flex-flow: column;\n  width: 100%;\n`;\n\nconst GroupTitle = styled.div`\n  font-size: 1.5rem;\n`;\n\nconst GroupWrap = styled.div`\n  display: flex;\n  flex-flow: column;\n  width: 100%;\n`;\n\nexport interface ITableItem {\n  content: JSX.Element;\n  groupTitle?: string;\n}\n\nexport interface ITable {\n  children: ITableItem[];\n  className?: string;\n  headerRow?: JSX.Element;\n}\nexport const Table = ({ children, className, headerRow }: ITable) => {\n  const grouped = groupByList(children, (s) => s.groupTitle);\n\n  return (\n    <Base className={className}>\n      {grouped.map((group) => (\n        <GroupWrap key={'gk' + group.key}>\n          {group.key && (\n            <GroupTitle key={`gt${group.key}`}>{group.key}</GroupTitle>\n          )}\n          <Group key={`g${group.key}`}>\n            {headerRow && (\n              <TableRow data-header=\"true\" key={`headrow${group.key}`}>\n                {headerRow}\n              </TableRow>\n            )}\n            {group.items.map((item) => (\n              <TableRow key={item.content.key}>{item.content}</TableRow>\n            ))}\n          </Group>\n        </GroupWrap>\n      ))}\n    </Base>\n  );\n};\n"],"names":[],"sourceRoot":""}