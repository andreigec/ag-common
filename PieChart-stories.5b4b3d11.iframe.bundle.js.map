{"version":3,"file":"PieChart-stories.5b4b3d11.iframe.bundle.js","mappings":";;;AAmBA","sources":["webpack://ag-common/./src/ui/components/PieChart/index.tsx"],"sourcesContent":["'use client';\nimport styled from '@emotion/styled';\nimport React from 'react';\n\nexport interface IPieChartData {\n  label: string;\n  value: number;\n  color: string;\n}\nexport interface IPieChart {\n  data: IPieChartData[];\n  className?: string;\n}\n\nconst Base = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nexport const PieChart: React.FC<IPieChart> = ({ data, className }) => {\n  const total = data.reduce((sum, { value }) => sum + value, 0);\n  const width = 500;\n  const height = 500;\n  const centerX = width / 2;\n  const centerY = height / 2;\n  const radius = Math.min(width, height) / 2;\n  let cumulativeAngle = 0;\n\n  return (\n    <Base className={className}>\n      <svg viewBox={`0 0 ${width} ${height}`}>\n        {data.map(({ label, value, color }) => {\n          const angle = (value / total) * 360;\n          const startX =\n            centerX + radius * Math.cos((cumulativeAngle * Math.PI) / 180);\n\n          const startY =\n            centerY + radius * Math.sin((cumulativeAngle * Math.PI) / 180);\n\n          const endX =\n            centerX +\n            radius * Math.cos(((cumulativeAngle + angle) * Math.PI) / 180);\n\n          const endY =\n            centerY +\n            radius * Math.sin(((cumulativeAngle + angle) * Math.PI) / 180);\n\n          const largeArcFlag = angle > 180 ? 1 : 0;\n          const midAngle = cumulativeAngle + angle / 2;\n          const midX =\n            centerX + radius * 0.75 * Math.cos((midAngle * Math.PI) / 180);\n\n          const midY =\n            centerY + radius * 0.75 * Math.sin((midAngle * Math.PI) / 180);\n\n          cumulativeAngle += angle;\n\n          return (\n            <g key={label}>\n              <title>{`${label}: ${value}`}</title>\n              <path\n                d={`M ${startX} ${startY} A ${radius} ${radius} 0 ${largeArcFlag} 1 ${endX} ${endY} L ${centerX} ${centerY} Z`}\n                fill={color}\n              />\n              <text\n                x={midX}\n                y={midY}\n                textAnchor=\"middle\"\n                alignmentBaseline=\"middle\"\n                stroke=\"white\"\n                strokeWidth=\"6px\"\n              >\n                {label}\n              </text>\n              <text\n                x={midX}\n                y={midY}\n                textAnchor=\"middle\"\n                alignmentBaseline=\"middle\"\n                fill=\"black\"\n              >\n                {label}\n              </text>\n            </g>\n          );\n        })}\n      </svg>\n    </Base>\n  );\n};\n"],"names":[],"sourceRoot":""}